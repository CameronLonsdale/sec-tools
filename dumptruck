#!/bin/bash
#
# dumptruck
# The dumptruck takes an asm file and dumps the opcodes into a hex escaped string for use in python
#
# By clonsdale
#
# The asm file needs to have the format specification in the top of the file
# BITS [16, 32, 64]
temp="dumptruck.temp"
if [ $# -eq 1 ]; then
    # Assemble shellcode
    errors=`nasm $1 -o $temp 2>&1`;
    if [ $? -ne 0 ]; then
        echo "Errors Detected!"
        echo "$errors";
        exit;
    fi

    if [ ! -z "$errors" ]; then
        echo "Warnings Detected!";
        echo "$errors";
        echo;
        echo "Did you forget to specify the BITS format on line 1 of $1?";
        echo "Eg. BITS 32";
        rm $temp;
        exit
    fi

    # Get bytes, trim and escape
    xxd -p $temp | tr -d '\n' | sed 's/\([a-f0-9]\{2\}\)/\\x\1/g';
    # sed explanation
    # Get 2 characters that match this pattern [a-f0-9]. Capture it and store in the variable \1
    # Replace it by the characters \\x\1. So b1 becomes \xb1

    rm $temp;
else
    echo "Usage: ./dumptruck <file.asm>"
fi

